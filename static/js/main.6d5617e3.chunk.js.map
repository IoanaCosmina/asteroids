{"version":3,"sources":["assets/images/asteroid/1.jpg","assets/images/asteroid/2.jpg","assets/images/asteroid/3.jpg","assets/images/asteroid/4.jpg","assets/images/asteroid/5.jpg","constants.js","components/Asteroid.js","components/Pagination.js","components/Today.js","components/HistoryCard.js","components/History.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_URL","API_KEY","imgArray","ast1","ast2","ast3","ast4","ast5","Asteroid","asteroid","name","estimated_diameter","close_approach_data","miss_distance","relative_velocity","isHazardous","is_potentially_hazardous_asteroid","distance","kilometers","velocity","kilometers_per_hour","diameter_min","meters","estimated_diameter_min","diameter_max","estimated_diameter_max","className","src","max","Math","floor","random","getRandomNumber","alt","Number","toFixed","range","from","to","step","i","push","Pagination","props","gotoPage","page","onPageChanged","f","currentPage","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","length","leftSpill","rightSpill","leftSpillPage","extraPages","ceil","this","role","aria-label","map","index","key","onClick","e","Component","Today","allAsteroids","currentAsteroids","data","offset","slice","current_date","moment","format","axios","get","Constants","then","response","asteroidObj","near_earth_objects","Object","keys","catch","error","console","log","totalAsteroids","id","HistoryCard","history","date","count","Fragment","filter","filteredAsteroid","History","yesterdayInfo","twodaysInfo","threedaysInfo","getAsteroids","getYesterdayInfo","t","subtract","getTwoDaysInfo","getThreeDaysInfo","App","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6d5617e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.73bb763c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.d247ff0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.e26c2309.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.bfc93194.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.08fdadb9.jpg\";","export const API_URL = \"https://api.nasa.gov/neo/rest/v1\";\r\nexport const API_KEY = \"utPTfalKIby2KQN1rACUXKB4jGHmIK061GVqPmYQ\"; //replace with your key","import React from 'react';\r\nimport '../assets/css/Asteroid.css';\r\nimport ast1 from '../assets/images/asteroid/1.jpg';\r\nimport ast2 from '../assets/images/asteroid/2.jpg';\r\nimport ast3 from '../assets/images/asteroid/3.jpg';\r\nimport ast4 from '../assets/images/asteroid/4.jpg';\r\nimport ast5 from '../assets/images/asteroid/5.jpg';\r\n\r\nconst imgArray = [ast1, ast2, ast3, ast4, ast5];\r\n\r\nconst Asteroid = ({ asteroid }) => {\r\n    if (!asteroid) return null;\r\n\r\n    const { name, estimated_diameter } = asteroid;\r\n    const { miss_distance, relative_velocity } = asteroid.close_approach_data[0];\r\n    const isHazardous = asteroid.is_potentially_hazardous_asteroid;\r\n\r\n    // TO DO -- Write a generic function for this and move to utils.js\r\n    const isMetric = true;\r\n    const unit_sm = isMetric ? \"meters\" : \"feet\";\r\n    const unit_xl = isMetric ? \"kilometers\" : \"miles\";\r\n    const distance = isMetric ? miss_distance.kilometers : miss_distance.miles;\r\n    const velocity = isMetric ? relative_velocity.kilometers_per_hour : relative_velocity.miles_per_hour;\r\n    const diameter_min = isMetric ? estimated_diameter.meters.estimated_diameter_min : estimated_diameter.feet.estimated_diameter_min;\r\n    const diameter_max = isMetric ? estimated_diameter.meters.estimated_diameter_max : estimated_diameter.feet.estimated_diameter_max;\r\n\r\n    const getRandomNumber = (max=5) => {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n\r\n    return (\r\n        <div className=\"card section\">\r\n            <div className=\"card-image\">\r\n                <figure className=\"image is-4by3\">\r\n                    <img src={imgArray[getRandomNumber()]} alt=\"asteroid\"></img>\r\n                </figure>\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <div className=\"media\">\r\n                    <div className=\"media-content\">\r\n                        <p className=\"title is-3\">Name: {name}</p>\r\n                        <article className={isHazardous ? \"message is-warning\" : \"message is-success\"}>\r\n                            <div className=\"message-body\">\r\n                                <p>Potentially Hazardous? {isHazardous ? \"Yes\" : \"No\"}</p>\r\n                            </div>\r\n                        </article>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"field\">\r\n                        <label className=\"label is-small\">Distance:</label>\r\n                        <span>{Number(distance).toFixed(2)} {unit_xl}</span>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label className=\"label is-small\">Velocity:</label>\r\n                        <span>{Number(velocity).toFixed(2)} {unit_xl}/hour</span>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label className=\"label is-small\">Diameter:</label>\r\n                        <span>{Number(diameter_min).toFixed(2)} - {Number(diameter_max).toFixed(2)} {unit_sm}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Asteroid;","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport '../assets/css/Pagination.css';\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n\r\n    while (i <= to) {\r\n        range.push(i);\r\n        i += step;\r\n    }\r\n\r\n    return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n        this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n        this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n        this.pageNeighbours =\r\n            typeof pageNeighbours === \"number\"\r\n                ? Math.max(0, Math.min(pageNeighbours, 2))\r\n                : 0;\r\n\r\n        this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n        this.state = { currentPage: 1 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gotoPage(1);\r\n    }\r\n\r\n    gotoPage = page => {\r\n        const { onPageChanged = f => f } = this.props;\r\n\r\n        const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n        const paginationData = {\r\n            currentPage,\r\n            totalPages: this.totalPages,\r\n            pageLimit: this.pageLimit,\r\n            totalRecords: this.totalRecords\r\n        };\r\n\r\n        this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n    };\r\n\r\n    handleClick = (page, evt) => {\r\n        evt.preventDefault();\r\n        this.gotoPage(page);\r\n    };\r\n\r\n    handleMoveLeft = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\r\n    };\r\n\r\n    handleMoveRight = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\r\n    };\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages = this.totalPages;\r\n        const currentPage = this.state.currentPage;\r\n        const pageNeighbours = this.pageNeighbours;\r\n\r\n        const totalNumbers = this.pageNeighbours * 2 + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n\r\n        if (totalPages > totalBlocks) {\r\n            let pages = [];\r\n\r\n            const leftBound = currentPage - pageNeighbours;\r\n            const rightBound = currentPage + pageNeighbours;\r\n            const beforeLastPage = totalPages - 1;\r\n\r\n            const startPage = leftBound > 2 ? leftBound : 2;\r\n            const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n            pages = range(startPage, endPage);\r\n\r\n            const pagesCount = pages.length;\r\n            const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n            const leftSpill = startPage > 2;\r\n            const rightSpill = endPage < beforeLastPage;\r\n\r\n            const leftSpillPage = LEFT_PAGE;\r\n            const rightSpillPage = RIGHT_PAGE;\r\n\r\n            if (leftSpill && !rightSpill) {\r\n                const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n                pages = [leftSpillPage, ...extraPages, ...pages];\r\n            } else if (!leftSpill && rightSpill) {\r\n                const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n                pages = [...pages, ...extraPages, rightSpillPage];\r\n            } else if (leftSpill && rightSpill) {\r\n                pages = [leftSpillPage, ...pages, rightSpillPage];\r\n            }\r\n\r\n            return [1, ...pages, totalPages];\r\n        }\r\n\r\n        return range(1, totalPages);\r\n    };\r\n\r\n    render() {\r\n        if (!this.totalRecords) return null;\r\n\r\n        if (this.totalPages === 1) return null;\r\n\r\n        const { currentPage } = this.state;\r\n        const pages = this.fetchPageNumbers();\r\n\r\n        return (\r\n            <Fragment>\r\n                <nav className=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\r\n                    <ul className=\"pagination-list\">\r\n                        {pages.map((page, index) => {\r\n                            if (page === LEFT_PAGE)\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <button\r\n                                            className=\"pagination-link pagination-previous\"\r\n                                            aria-label=\"Previous\"\r\n                                            onClick={this.handleMoveLeft}\r\n                                        >\r\n                                            <span className=\"sr-only\">Previous</span>\r\n                                        </button>\r\n                                    </li>\r\n                                );\r\n\r\n                            if (page === RIGHT_PAGE)\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <button\r\n                                            className=\"pagination-link pagination-next\"\r\n                                            aria-label=\"Next\"\r\n                                            onClick={this.handleMoveRight}\r\n                                        >\r\n                                            <span className=\"sr-only\">Next</span>\r\n                                        </button>\r\n                                    </li>\r\n                                );\r\n\r\n                            return (\r\n                                <li key={index}>\r\n                                    <button\r\n                                        className={`pagination-link ${currentPage === page ? \" is-current\" : \"\"}`}\r\n                                        onClick={e => this.handleClick(page, e)}>\r\n                                        {page}\r\n                                    </button>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    totalRecords: PropTypes.number.isRequired,\r\n    pageLimit: PropTypes.number,\r\n    pageNeighbours: PropTypes.number,\r\n    onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport '../assets/css/Today.css';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport * as Constants from '../constants.js';\r\nimport Asteroid from '../components/Asteroid';\r\nimport Pagination from '../components/Pagination';\r\n\r\nclass Today extends Component {\r\n    state = { allAsteroids: [], currentAsteroids: [], currentPage: null, totalPages: null };\r\n\r\n    componentDidMount() {\r\n        let current_date = moment().format('YYYY-MM-DD');\r\n        axios.get(`${Constants.API_URL}/feed?start_date=${current_date}&end_date=${current_date}&api_key=${Constants.API_KEY}`)\r\n            .then(response => {\r\n                const asteroidObj = response.data.near_earth_objects;\r\n                this.setState({ allAsteroids: asteroidObj[Object.keys(asteroidObj)[0]] });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    onPageChanged = data => {\r\n        const { allAsteroids } = this.state;\r\n        const { currentPage, totalPages, pageLimit } = data;\r\n\r\n        const offset = (currentPage - 1) * pageLimit;\r\n        const currentAsteroids = allAsteroids.slice(offset, offset + pageLimit);\r\n\r\n        this.setState({ currentPage, currentAsteroids, totalPages });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            allAsteroids,\r\n            currentAsteroids\r\n        } = this.state;\r\n        const totalAsteroids = allAsteroids.length;\r\n\r\n        if (totalAsteroids === 0) return null;\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"title is-spaced\">Today - {moment().format('MMMM Do, YYYY')}</h1>\r\n                <h2 className=\"subtitle\">{totalAsteroids} Asteroids</h2>\r\n                <div className=\"\">\r\n                    <Pagination\r\n                        totalRecords={totalAsteroids}\r\n                        pageLimit={3}\r\n                        pageNeighbours={1}\r\n                        onPageChanged={this.onPageChanged}\r\n                    />\r\n                </div>\r\n                <div className=\"container today--container\">\r\n                    {currentAsteroids.map(asteroid => (\r\n                        <Asteroid key={asteroid.id} asteroid={asteroid} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Today;","import React from 'react';\r\nimport '../assets/css/HistoryCard.css';\r\n\r\nconst HistoryCard = props => {\r\n    const { date, count, allAsteroids } = props.history;\r\n    if (!allAsteroids) return null;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"card\">\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {date}\r\n                    </p>\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        <div className=\"field\">\r\n                            <label className=\"label is-small\">Total:</label>\r\n                            <span>{count} asteroids</span>\r\n                        </div>\r\n                        <p>List of potentially hazardous asteroids:</p>\r\n                        <ul className=\"fa-ul\">\r\n                            {\r\n                                allAsteroids.filter(asteroid => asteroid.is_potentially_hazardous_asteroid).map(filteredAsteroid => (\r\n                                    <li key={filteredAsteroid.id}>\r\n                                        <i className=\"fa-li fa fa-exclamation\"></i>\r\n                                        <span>{filteredAsteroid.name}</span>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default HistoryCard;","import React, { Component } from 'react';\r\nimport '../assets/css/History.css';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport * as Constants from '../constants.js';\r\nimport HistoryCard from './HistoryCard';\r\n\r\nclass History extends Component {\r\n    state = { yesterdayInfo: {}, twodaysInfo: {}, threedaysInfo: {} }\r\n\r\n    getAsteroids = (date) => {\r\n        return axios.get(`${Constants.API_URL}/feed?start_date=${date}&end_date=${date}&api_key=${Constants.API_KEY}`);\r\n    }\r\n\r\n    getYesterdayInfo = () => {\r\n        let t = moment().subtract(1, 'days').format('YYYY-MM-DD');\r\n        this.getAsteroids(t)\r\n            .then(response => {\r\n                const asteroidObj = response.data.near_earth_objects;\r\n                let f = {\r\n                    date: moment().subtract(1, 'days').format(\"MMMM Do, YYYY\"),\r\n                    allAsteroids: asteroidObj[Object.keys(asteroidObj)[0]],\r\n                    count: asteroidObj[Object.keys(asteroidObj)[0]].length\r\n                }\r\n                this.setState({ yesterdayInfo: f });\r\n            });\r\n    }\r\n\r\n    getTwoDaysInfo = () => {\r\n        let t = moment().subtract(2, 'days').format('YYYY-MM-DD');\r\n        this.getAsteroids(t)\r\n            .then(response => {\r\n                const asteroidObj = response.data.near_earth_objects;\r\n                let f = {\r\n                    date: moment().subtract(2, 'days').format(\"MMMM Do, YYYY\"),\r\n                    allAsteroids: asteroidObj[Object.keys(asteroidObj)[0]],\r\n                    count: asteroidObj[Object.keys(asteroidObj)[0]].length\r\n                }\r\n                this.setState({ twodaysInfo: f });\r\n            });\r\n    }\r\n\r\n    getThreeDaysInfo = () => {\r\n        let t = moment().subtract(3, 'days').format('YYYY-MM-DD');\r\n        this.getAsteroids(t)\r\n            .then(response => {\r\n                const asteroidObj = response.data.near_earth_objects;\r\n                let f = {\r\n                    date: moment().subtract(3, 'days').format(\"MMMM Do, YYYY\"),\r\n                    allAsteroids: asteroidObj[Object.keys(asteroidObj)[0]],\r\n                    count: asteroidObj[Object.keys(asteroidObj)[0]].length\r\n                }\r\n                this.setState({ threedaysInfo: f });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getYesterdayInfo();\r\n        this.getTwoDaysInfo();\r\n        this.getThreeDaysInfo();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"title is-spaced\">Last 3 days</h1>\r\n                <div className=\"container history--container\">\r\n                    <HistoryCard history={this.state.yesterdayInfo}></HistoryCard>\r\n                    <HistoryCard history={this.state.twodaysInfo}></HistoryCard>\r\n                    <HistoryCard history={this.state.threedaysInfo}></HistoryCard>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default History;","import React, { Component } from 'react';\nimport './App.css';\nimport Today from './components/Today';\nimport History from './components/History';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"topheader\">\n          <header className=\"container\">\n            <nav className=\"navbar\">\n              <div className=\"navbar-brand\">\n                <span className=\"navbar-item\">AsteroidAlert</span>\n              </div>\n              <div className=\"navbar-end\">\n                <a className=\"navbar-item\" href=\"https://api.nasa.gov/\" target=\"_blank\" rel=\"noopener noreferrer\">Powered by NASA Open APIs</a>\n              </div>\n            </nav>\n          </header>\n        </div>\n        <section className=\"results--section\">\n          <Today />\n          <History />\n        </section>\n        <footer className=\"footer\">\n          <div className=\"content has-text-centered\">\n            <p>\n              AsteroidAlert provides realtime information about near Earth asteroids,\n              <br></br>\n              based on information retrieved from the <a href=\"https://api.nasa.gov/\">NeoWs (Near Earth Object Web Service) API</a>.\n            </p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}