{"version":3,"sources":["assets/images/asteroid/1.jpg","assets/images/asteroid/2.jpg","assets/images/asteroid/3.jpg","assets/images/asteroid/4.jpg","assets/images/asteroid/5.jpg","constants.js","components/Asteroid.js","components/Pagination.js","components/Today.js","components/HistoryCard.js","components/History.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_URL","API_KEY","ast1","ast2","ast3","ast4","ast5","range","from","to","step","i","push","Pagination","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","length","leftSpill","rightSpill","leftSpillPage","extraPages","ceil","this","className","role","aria-label","map","index","key","onClick","e","Component","Today","allAsteroids","currentAsteroids","data","offset","slice","localStorage","setItem","JSON","stringify","navigator","onLine","getItem","current_date","moment","format","axios","get","Constants","then","response","asteroidObj","near_earth_objects","Object","keys","catch","error","console","log","totalAsteroids","asteroid","HistoryCard","history","date","count","Fragment","filter","is_potentially_hazardous_asteroid","filteredAsteroid","id","name","History","yesterdayInfo","twodaysInfo","threedaysInfo","getAsteroids","getYesterdayInfo","t","subtract","getTwoDaysInfo","getThreeDaysInfo","parse","App","href","target","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5d790ac4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.73bb763c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.d247ff0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.e26c2309.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.bfc93194.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.08fdadb9.jpg\";","export const API_URL = \"https://api.nasa.gov/neo/rest/v1\";\r\nexport const API_KEY = \"utPTfalKIby2KQN1rACUXKB4jGHmIK061GVqPmYQ\"; //replace with your key","import React from 'react';\r\nimport '../assets/css/Asteroid.css';\r\nimport ast1 from '../assets/images/asteroid/1.jpg';\r\nimport ast2 from '../assets/images/asteroid/2.jpg';\r\nimport ast3 from '../assets/images/asteroid/3.jpg';\r\nimport ast4 from '../assets/images/asteroid/4.jpg';\r\nimport ast5 from '../assets/images/asteroid/5.jpg';\r\n\r\nconst imgArray = [ast1, ast2, ast3, ast4, ast5];\r\n\r\nconst Asteroid = ({ asteroid }) => {\r\n    if (!asteroid) return null;\r\n\r\n    const { name, estimated_diameter } = asteroid;\r\n    const { miss_distance, relative_velocity } = asteroid.close_approach_data[0];\r\n    const isHazardous = asteroid.is_potentially_hazardous_asteroid;\r\n\r\n    // TO DO -- Write a generic function for this and move to utils.js\r\n    const isMetric = true;\r\n    const unit_sm = isMetric ? \"meters\" : \"feet\";\r\n    const unit_xl = isMetric ? \"kilometers\" : \"miles\";\r\n    const distance = isMetric ? miss_distance.kilometers : miss_distance.miles;\r\n    const velocity = isMetric ? relative_velocity.kilometers_per_hour : relative_velocity.miles_per_hour;\r\n    const diameter_min = isMetric ? estimated_diameter.meters.estimated_diameter_min : estimated_diameter.feet.estimated_diameter_min;\r\n    const diameter_max = isMetric ? estimated_diameter.meters.estimated_diameter_max : estimated_diameter.feet.estimated_diameter_max;\r\n\r\n    const getRandomNumber = (max=5) => {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n\r\n    return (\r\n        <div className=\"card section\">\r\n            <div className=\"card-image\">\r\n                <figure className=\"image is-4by3\">\r\n                    <img src={imgArray[getRandomNumber()]} alt=\"asteroid\"></img>\r\n                </figure>\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <div className=\"media\">\r\n                    <div className=\"media-content\">\r\n                        <p className=\"title is-3\">Name: {name}</p>\r\n                        <article className={isHazardous ? \"message is-warning\" : \"message is-success\"}>\r\n                            <div className=\"message-body\">\r\n                                <p>Potentially Hazardous? {isHazardous ? \"Yes\" : \"No\"}</p>\r\n                            </div>\r\n                        </article>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"field\">\r\n                        <label className=\"label is-small\">Distance:</label>\r\n                        <span>{Number(distance).toFixed(2)} {unit_xl}</span>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label className=\"label is-small\">Velocity:</label>\r\n                        <span>{Number(velocity).toFixed(2)} {unit_xl}/hour</span>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label className=\"label is-small\">Diameter:</label>\r\n                        <span>{Number(diameter_min).toFixed(2)} - {Number(diameter_max).toFixed(2)} {unit_sm}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Asteroid;","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport '../assets/css/Pagination.css';\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n\r\n    while (i <= to) {\r\n        range.push(i);\r\n        i += step;\r\n    }\r\n\r\n    return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n        this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n        this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n        this.pageNeighbours =\r\n            typeof pageNeighbours === \"number\"\r\n                ? Math.max(0, Math.min(pageNeighbours, 2))\r\n                : 0;\r\n\r\n        this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n        this.state = { currentPage: 1 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gotoPage(1);\r\n    }\r\n\r\n    gotoPage = page => {\r\n        const { onPageChanged = f => f } = this.props;\r\n\r\n        const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n        const paginationData = {\r\n            currentPage,\r\n            totalPages: this.totalPages,\r\n            pageLimit: this.pageLimit,\r\n            totalRecords: this.totalRecords\r\n        };\r\n\r\n        this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n    };\r\n\r\n    handleClick = (page, evt) => {\r\n        evt.preventDefault();\r\n        this.gotoPage(page);\r\n    };\r\n\r\n    handleMoveLeft = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\r\n    };\r\n\r\n    handleMoveRight = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\r\n    };\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages = this.totalPages;\r\n        const currentPage = this.state.currentPage;\r\n        const pageNeighbours = this.pageNeighbours;\r\n\r\n        const totalNumbers = this.pageNeighbours * 2 + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n\r\n        if (totalPages > totalBlocks) {\r\n            let pages = [];\r\n\r\n            const leftBound = currentPage - pageNeighbours;\r\n            const rightBound = currentPage + pageNeighbours;\r\n            const beforeLastPage = totalPages - 1;\r\n\r\n            const startPage = leftBound > 2 ? leftBound : 2;\r\n            const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n            pages = range(startPage, endPage);\r\n\r\n            const pagesCount = pages.length;\r\n            const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n            const leftSpill = startPage > 2;\r\n            const rightSpill = endPage < beforeLastPage;\r\n\r\n            const leftSpillPage = LEFT_PAGE;\r\n            const rightSpillPage = RIGHT_PAGE;\r\n\r\n            if (leftSpill && !rightSpill) {\r\n                const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n                pages = [leftSpillPage, ...extraPages, ...pages];\r\n            } else if (!leftSpill && rightSpill) {\r\n                const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n                pages = [...pages, ...extraPages, rightSpillPage];\r\n            } else if (leftSpill && rightSpill) {\r\n                pages = [leftSpillPage, ...pages, rightSpillPage];\r\n            }\r\n\r\n            return [1, ...pages, totalPages];\r\n        }\r\n\r\n        return range(1, totalPages);\r\n    };\r\n\r\n    render() {\r\n        if (!this.totalRecords) return null;\r\n\r\n        if (this.totalPages === 1) return null;\r\n\r\n        const { currentPage } = this.state;\r\n        const pages = this.fetchPageNumbers();\r\n\r\n        return (\r\n            <Fragment>\r\n                <nav className=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\r\n                    <ul className=\"pagination-list\">\r\n                        {pages.map((page, index) => {\r\n                            if (page === LEFT_PAGE)\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <button\r\n                                            className=\"pagination-link pagination-previous\"\r\n                                            aria-label=\"Previous\"\r\n                                            onClick={this.handleMoveLeft}\r\n                                        >\r\n                                            <span className=\"sr-only\">Previous</span>\r\n                                        </button>\r\n                                    </li>\r\n                                );\r\n\r\n                            if (page === RIGHT_PAGE)\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <button\r\n                                            className=\"pagination-link pagination-next\"\r\n                                            aria-label=\"Next\"\r\n                                            onClick={this.handleMoveRight}\r\n                                        >\r\n                                            <span className=\"sr-only\">Next</span>\r\n                                        </button>\r\n                                    </li>\r\n                                );\r\n\r\n                            return (\r\n                                <li key={index}>\r\n                                    <button\r\n                                        className={`pagination-link ${currentPage === page ? \" is-current\" : \"\"}`}\r\n                                        onClick={e => this.handleClick(page, e)}>\r\n                                        {page}\r\n                                    </button>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    totalRecords: PropTypes.number.isRequired,\r\n    pageLimit: PropTypes.number,\r\n    pageNeighbours: PropTypes.number,\r\n    onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport '../assets/css/Today.css';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport * as Constants from '../constants.js';\r\nimport Asteroid from '../components/Asteroid';\r\nimport Pagination from '../components/Pagination';\r\n\r\nclass Today extends Component {\r\n    state = { allAsteroids: [], currentAsteroids: [], currentPage: null, totalPages: null };\r\n\r\n    componentDidMount() {\r\n        if (!navigator.onLine) {\r\n            this.setState({ allAsteroids: localStorage.getItem('allAsteroids') });\r\n        }\r\n        let current_date = moment().format('YYYY-MM-DD');\r\n        axios.get(`${Constants.API_URL}/feed?start_date=${current_date}&end_date=${current_date}&api_key=${Constants.API_KEY}`)\r\n            .then(response => {\r\n                const asteroidObj = response.data.near_earth_objects;\r\n                this.setState({ allAsteroids: asteroidObj[Object.keys(asteroidObj)[0]] });\r\n                localStorage.setItem('allAsteroids', JSON.stringify(asteroidObj[Object.keys(asteroidObj)[0]]));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    onPageChanged = data => {\r\n        const { allAsteroids } = this.state;\r\n        const { currentPage, totalPages, pageLimit } = data;\r\n\r\n        const offset = (currentPage - 1) * pageLimit;\r\n        const currentAsteroids = allAsteroids.slice(offset, offset + pageLimit);\r\n\r\n        this.setState({ currentPage, currentAsteroids, totalPages });\r\n        localStorage.setItem('currentAsteroids', JSON.stringify(currentAsteroids));\r\n    }\r\n\r\n    render() {\r\n        if (!navigator.onLine) {\r\n            this.setState({\r\n                allAsteroids: localStorage.getItem('allAsteroids'),\r\n                currentAsteroids: localStorage.getItem('currentAsteroids')\r\n            });\r\n        }\r\n\r\n        const {\r\n            allAsteroids,\r\n            currentAsteroids\r\n        } = this.state;\r\n        const totalAsteroids = allAsteroids.length;\r\n\r\n        if (totalAsteroids === 0 || !currentAsteroids) return null;\r\n        console.log(currentAsteroids);\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"title is-spaced\">Today - {moment().format('MMMM Do, YYYY')}</h1>\r\n                <h2 className=\"subtitle\">{totalAsteroids} Asteroids</h2>\r\n                <div className=\"\">\r\n                    <Pagination\r\n                        totalRecords={totalAsteroids}\r\n                        pageLimit={3}\r\n                        pageNeighbours={1}\r\n                        onPageChanged={this.onPageChanged}\r\n                    />\r\n                </div>\r\n                <div className=\"container today--container\">\r\n                    {!currentAsteroids && currentAsteroids.map(asteroid => (\r\n                        console.log(\"asteroid\", asteroid)\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Today;\r\n\r\n// <Asteroid key={asteroid.id} asteroid={asteroid} />","import React from 'react';\r\nimport '../assets/css/HistoryCard.css';\r\n\r\nconst HistoryCard = props => {\r\n    const { date, count, allAsteroids } = props.history;\r\n    if (!allAsteroids) return null;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"card\">\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {date}\r\n                    </p>\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        <div className=\"field\">\r\n                            <label className=\"label is-small\">Total:</label>\r\n                            <span>{count} asteroids</span>\r\n                        </div>\r\n                        <p>List of potentially hazardous asteroids:</p>\r\n                        <ul className=\"fa-ul\">\r\n                            {\r\n                                allAsteroids.filter(asteroid => asteroid.is_potentially_hazardous_asteroid).map(filteredAsteroid => (\r\n                                    <li key={filteredAsteroid.id}>\r\n                                        <i className=\"fa-li fa fa-exclamation\"></i>\r\n                                        <span>{filteredAsteroid.name}</span>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default HistoryCard;","import React, { Component } from 'react';\r\nimport '../assets/css/History.css';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport * as Constants from '../constants.js';\r\nimport HistoryCard from './HistoryCard';\r\n\r\nclass History extends Component {\r\n    state = { yesterdayInfo: {}, twodaysInfo: {}, threedaysInfo: {} }\r\n\r\n    getAsteroids = (date) => {\r\n        return axios.get(`${Constants.API_URL}/feed?start_date=${date}&end_date=${date}&api_key=${Constants.API_KEY}`);\r\n    }\r\n\r\n    getYesterdayInfo = () => {\r\n        let t = moment().subtract(1, 'days').format('YYYY-MM-DD');\r\n        this.getAsteroids(t)\r\n            .then(response => {\r\n                const asteroidObj = response.data.near_earth_objects;\r\n                let f = {\r\n                    date: moment().subtract(1, 'days').format(\"MMMM Do, YYYY\"),\r\n                    allAsteroids: asteroidObj[Object.keys(asteroidObj)[0]],\r\n                    count: asteroidObj[Object.keys(asteroidObj)[0]].length\r\n                };\r\n                localStorage.setItem('yesterdayInfo', JSON.stringify(f));\r\n                this.setState({ yesterdayInfo: f });\r\n            });\r\n    }\r\n\r\n    getTwoDaysInfo = () => {\r\n        let t = moment().subtract(2, 'days').format('YYYY-MM-DD');\r\n        this.getAsteroids(t)\r\n            .then(response => {\r\n                const asteroidObj = response.data.near_earth_objects;\r\n                let f = {\r\n                    date: moment().subtract(2, 'days').format(\"MMMM Do, YYYY\"),\r\n                    allAsteroids: asteroidObj[Object.keys(asteroidObj)[0]],\r\n                    count: asteroidObj[Object.keys(asteroidObj)[0]].length\r\n                };\r\n                localStorage.setItem('twodaysInfo', JSON.stringify(f));\r\n                this.setState({ twodaysInfo: f });\r\n            });\r\n    }\r\n\r\n    getThreeDaysInfo = () => {\r\n        let t = moment().subtract(3, 'days').format('YYYY-MM-DD');\r\n        this.getAsteroids(t)\r\n            .then(response => {\r\n                const asteroidObj = response.data.near_earth_objects;\r\n                let f = {\r\n                    date: moment().subtract(3, 'days').format(\"MMMM Do, YYYY\"),\r\n                    allAsteroids: asteroidObj[Object.keys(asteroidObj)[0]],\r\n                    count: asteroidObj[Object.keys(asteroidObj)[0]].length\r\n                };\r\n                localStorage.setItem('threedaysInfo', JSON.stringify(f));\r\n                this.setState({ threedaysInfo: f });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!navigator.onLine) {\r\n            this.setState({ yesterdayInfo: JSON.parse(localStorage.getItem('yesterdayInfo')) });\r\n            this.setState({ twodaysInfo: JSON.parse(localStorage.getItem('twodaysInfo')) });\r\n            this.setState({ threedaysInfo: JSON.parse(localStorage.getItem('threedaysInfo')) });\r\n        }\r\n        this.getYesterdayInfo();\r\n        this.getTwoDaysInfo();\r\n        this.getThreeDaysInfo();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"title is-spaced\">Last 3 days</h1>\r\n                <div className=\"container history--container\">\r\n                    <HistoryCard history={this.state.yesterdayInfo}></HistoryCard>\r\n                    <HistoryCard history={this.state.twodaysInfo}></HistoryCard>\r\n                    <HistoryCard history={this.state.threedaysInfo}></HistoryCard>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default History;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Today from './components/Today';\r\nimport History from './components/History';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"topheader\">\r\n          <header className=\"container\">\r\n            <nav className=\"navbar\">\r\n              <div className=\"navbar-brand\">\r\n                <span className=\"navbar-item\">AsteroidAlert</span>\r\n              </div>\r\n              <div className=\"navbar-end\">\r\n                <a className=\"navbar-item\" href=\"https://api.nasa.gov/\" target=\"_blank\" rel=\"noopener noreferrer\">Powered by NASA Open APIs</a>\r\n              </div>\r\n            </nav>\r\n          </header>\r\n        </div>\r\n        <section className=\"results--section\">\r\n          <Today />\r\n          <History />\r\n        </section>\r\n        <footer className=\"footer\">\r\n          <div className=\"content has-text-centered\">\r\n            <p>\r\n              AsteroidAlert provides realtime information about near Earth asteroids,\r\n              <br></br>\r\n              based on information retrieved from the <a href=\"https://api.nasa.gov/\">NeoWs (Near Earth Object Web Service) API</a>.\r\n            </p>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}